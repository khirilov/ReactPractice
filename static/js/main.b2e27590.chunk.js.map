{"version":3,"sources":["context.js","components/NavBar.jsx","pages/NotFoundPage.jsx","components/Post.jsx","components/PostList.jsx","components/PostForm.jsx","components/SelectFilter.jsx","components/PostFilter.jsx","components/ModalWin.jsx","hooks/usePosts.jsx","components/Preloader.jsx","components/PageButtons.jsx","pages/AboutPage.jsx","routes.js","pages/LoginPage.jsx","pages/PostsPage.jsx","pages/PostPage.jsx","components/PagesHandler.jsx","App.js","index.js"],"names":["AuthContext","createContext","Navbar","useContext","isAuth","setIsAuth","className","onClick","localStorage","removeItem","to","NotFoundPage","Post","props","router","useHistory","id","title","body","push","delPost","PostList","array","length","map","el","index","PostForm","create","useState","post","setPost","value","placeholder","onChange","e","target","preventDefault","newPost","Date","now","SelectFilter","defaultValue","options","name","size","event","disabled","option","PostFilter","filter","setFilter","query","sort","selectedSort","ModalWin","children","isActive","setActive","classes","stopPropagation","usePosts","sortedArray","useMemo","a","b","localeCompare","useSortedPosts","toLowerCase","includes","Preloader","PageButtons","totalPages","setPage","pageArray","i","p","publicRoutes","path","component","setItem","type","exact","privateRoutes","setArray","setTotalPages","isLoad","setIsLoad","limit","page","resultSortedSearch","useEffect","fetchPosts","fetch","then","response","totalCount","headers","get","Math","ceil","json","data","params","useParams","result","setResult","isLoading","setIsLoading","comments","setComments","console","log","com","email","PagesHandler","App","getItem","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEaA,EAAcC,wBAAc,M,OCCnCC,EAAS,WACb,MAA8BC,qBAAWH,GAAjCI,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAMhB,OACE,qBAAKC,UAAU,oBAAf,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAIA,UAAU,wBAAd,UACGF,GACC,oBAAIE,UAAU,MAAMC,QATf,WACbF,GAAU,GACVG,aAAaC,WAAW,SAOhB,qBAIF,oBAAIH,UAAU,MAAd,SACE,cAAC,IAAD,CAAMI,GAAG,SAAT,0BAEF,oBAAIJ,UAAU,MAAd,SACE,cAAC,IAAD,CAAMI,GAAG,SAAT,kC,OCrBNC,EAAe,WACnB,OAAO,8D,eCDT,SAASC,EAAKC,GACZ,IAAMC,EAASC,cAEf,OACE,sBAAKT,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,mCACE,iCAAOO,EAAMG,GAAb,QACCH,EAAMI,SAET,4BAAIJ,EAAMK,UAEZ,sBAAKZ,UAAU,cAAf,UACE,wBACEA,UAAU,MACVC,QAAS,kBAAMO,EAAOK,KAAP,iBAAsBN,EAAMG,MAF7C,kBAMA,wBAAQV,UAAU,MAAMC,QAAS,kBAAMM,EAAMO,QAAQP,IAArD,0BClBR,SAASQ,EAAT,GAAuC,IAAnBC,EAAkB,EAAlBA,MAAOF,EAAW,EAAXA,QACzB,OAAKE,EAAMC,OAKT,qCACE,2CACCD,EAAME,KAAI,SAACC,EAAIC,GACd,OAAO,cAACd,EAAD,2BAAsBa,GAAtB,IAA0BL,QAASA,IAAxBK,EAAGT,UAPlB,uDCHX,SAASW,EAAT,GAA+B,IAAXC,EAAU,EAAVA,OAClB,EAAwBC,mBAAS,CAAEZ,MAAO,GAAIC,KAAM,KAApD,mBAAOY,EAAP,KAAaC,EAAb,KAYA,OACE,iCACE,uBACEC,MAAOF,EAAKb,MACZgB,YAAY,QACZC,SAAU,SAACC,GAAD,OAAOJ,EAAQ,2BAAKD,GAAN,IAAYb,MAAOkB,EAAEC,OAAOJ,YAEtD,uBACEA,MAAOF,EAAKZ,KACZe,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOJ,EAAQ,2BAAKD,GAAN,IAAYZ,KAAMiB,EAAEC,OAAOJ,YAErD,wBAAQzB,QAtBO,SAAC4B,GAClBA,EAAEE,iBACF,IAAMC,EAAO,2BACRR,GADQ,IAEXd,GAAIuB,KAAKC,QAEXZ,EAAOU,GACPP,EAAQ,CAAEd,MAAO,GAAIC,KAAM,MAezB,uBCzBN,SAASuB,EAAT,GAAmE,IAA3CC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,QAASX,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,SACpD,OACE,yBACEU,KAAK,SACLC,KAAK,IACLvC,UAAU,sBACV0B,MAAOA,EACPE,SAAU,SAACY,GAAD,OAAWZ,EAASY,EAAMV,OAAOJ,QAL7C,UAOE,wBAAQe,UAAQ,EAACf,MAAM,WAAvB,SACGU,IAEFC,EAAQnB,KAAI,SAACwB,EAAQtB,GAAT,OACX,wBAAoBM,MAAOgB,EAAOhB,MAAlC,SACGgB,EAAOJ,MADGlB,SCXrB,SAASuB,EAAT,GAA4C,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAC5B,OACE,qCACE,uBACElB,YAAY,SACZD,MAAOkB,EAAOE,MACdlB,SAAU,SAACC,GAAD,OAAOgB,EAAU,2BAAKD,GAAN,IAAcE,MAAOjB,EAAEC,OAAOJ,YAE1D,cAACS,EAAD,CACET,MAAOkB,EAAOG,KACdnB,SAAU,SAACoB,GAAD,OACRH,EAAU,2BAAKD,GAAN,IAAcG,KAAMC,MAE/BZ,aAAa,SACbC,QAAS,CACP,CAAEX,MAAO,QAASY,KAAM,WACxB,CAAEZ,MAAO,OAAQY,KAAM,iBClBjC,SAASW,EAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAClCC,EAAU,WAKd,OAJIF,IACFE,GAAW,gBAIX,qBAAKrD,UAAWqD,EAASpD,QAAS,SAACuC,GAAD,OAAWY,GAAU,IAAvD,SACE,qBAAKpD,UAAU,eAAeC,QAAS,SAAC4B,GAAD,OAAOA,EAAEyB,mBAAhD,SACGJ,MCTF,IAWMK,EAAW,SAACT,EAAO9B,EAAO+B,GACrC,IAAMS,EAZsB,SAACxC,EAAO+B,GAQpC,OAPoBU,mBAAQ,WAC1B,OAAIV,EACK,YAAI/B,GAAO+B,MAAK,SAACW,EAAGC,GAAJ,OAAUD,EAAEX,GAAMa,cAAcD,EAAEZ,OAEpD/B,IACN,CAAC+B,EAAM/B,IAMU6C,CAAe7C,EAAO+B,GAO1C,OAN2BU,mBAAQ,WACjC,OAAOD,EAAYZ,QAAO,SAACpB,GAAD,OACxBA,EAAKb,MAAMmD,cAAcC,SAASjB,EAAMgB,oBAEzC,CAACN,EAAaV,KCjBnB,SAASkB,IACP,OACE,qBAAKhE,UAAU,WAAf,SACE,qBAAKA,UAAU,oBCHrB,IAAMiE,EAAc,SAAC,GAEnB,IAFgD,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC3BC,EAAY,GACTC,EAAI,EAAGA,GAAKH,EAAYG,IAC/BD,EAAUvD,KAAKwD,GAOjB,OACE,qBAAKrE,UAAU,eAAf,SACGoE,EAAUlD,KAAI,SAACoD,GACd,OACE,wBACEtE,UAAU,MAEVC,QAAS,WAVjBkE,EAWsBG,IAJhB,SAOGA,GALIA,SChBjB,ICEaC,EAAe,CAC1B,CAACC,KAAM,SAAUC,UCFD,WAChB,MAA8B5E,qBAAWH,GAAzBK,GAAhB,EAAQD,OAAR,EAAgBC,WAQhB,OACE,gCACE,4CACA,uBAAME,QATI,SAACuC,GACbA,EAAMT,iBACNhC,GAAU,GACVG,aAAawE,QAAQ,OAAQ,SAM3B,UACE,uBAAOC,KAAK,OAAOhD,YAAY,UAC/B,uBAAOgD,KAAK,WAAWhD,YAAY,aACnC,wBAAQ3B,UAAU,MAAlB,2BDbiC4E,OAAM,IAGlCC,EAAgB,CAC3B,CAACL,KAAM,SAAUC,UEAnB,WACE,MAA0BlD,mBAAS,IAAnC,mBAAOP,EAAP,KAAc8D,EAAd,KACA,EAA4BvD,mBAAS,CACnCwB,KAAM,GACND,MAAO,KAFT,mBAAOF,EAAP,KAAeC,EAAf,KAIA,EAA8BtB,oBAAS,GAAvC,mBAAO4B,EAAP,KAAiBC,EAAjB,KACA,EAAoC7B,mBAAS,GAA7C,mBAAO2C,EAAP,KAAmBa,EAAnB,KACA,EAA4BxD,oBAAS,GAArC,mBAAOyD,EAAP,KAAeC,EAAf,KACA,EAA0B1D,mBAAS,IAAnC,mBAAO2D,EAAP,KACA,GADA,KACwB3D,mBAAS,IAAjC,mBAAO4D,EAAP,KAAahB,EAAb,KACMiB,EAAqB7B,EAASX,EAAOE,MAAO9B,EAAO4B,EAAOG,MAShEsC,qBAAU,WACRJ,GAAU,GACVK,EAAWJ,EAAOC,KACjB,CAACA,IAEJ,IAAMG,EAAa,SAACJ,EAAOC,GACzBI,MAAM,qDAAD,OACkDL,EADlD,kBACiEC,IAEnEK,MAAK,SAACC,GACL,IAAMC,EAAaD,EAASE,QAAQC,IAAI,iBAExC,OADAb,EAAcc,KAAKC,KAAKJ,EAAaR,IAC9BO,EAASM,UAEjBP,MAAK,SAACQ,GACLlB,EAASkB,GACTf,GAAU,OAIhB,OACE,sBAAKjF,UAAU,YAAf,UACE,cAACiD,EAAD,CAAUE,SAAUA,EAAUC,UAAWA,EAAzC,SACE,cAAC/B,EAAD,CAAUC,OA/BG,SAACU,GAClB8C,EAAS,GAAD,mBAAK9D,GAAL,CAAYgB,KACpBoB,GAAU,QA+BR,cAACT,EAAD,CAAYC,OAAQA,EAAQC,UAAWA,IACvC,wBAAQ7C,UAAU,MAAMC,QAAS,kBAAMmD,GAAU,IAAjD,yBAGC4B,EACC,cAAChB,EAAD,IAEA,cAACjD,EAAD,CAAUC,MAAOoE,EAAoBtE,QApCxB,SAACU,GAClBsD,EAAS9D,EAAM4B,QAAO,SAACzB,GAAD,OAAQA,EAAGT,KAAOc,EAAKd,UAqC3C,cAAC,EAAD,CAAayD,QAASA,EAASD,WAAYA,QFtDRU,OAAM,GAC7C,CAACJ,KAAM,SAAUC,UDRD,WAChB,OAAO,0FCOgCG,OAAM,GAC7C,CAACJ,KAAM,aAAcC,UGPN,WACf,IAAMwB,EAASC,cACf,EAA4B3E,mBAAS,IAArC,mBAAO4E,EAAP,KAAeC,EAAf,KACA,EAAkC7E,oBAAS,GAA3C,mBAAO8E,EAAP,KAAkBC,EAAlB,KACA,EAAgC/E,mBAAS,IAAzC,mBAAOgF,EAAP,KAAiBC,EAAjB,KAkBA,OAhBAnB,qBAAU,WACRiB,GAAa,GACbf,MAAM,8CAAD,OAA+CU,EAAOvF,KACxD8E,MAAK,SAACC,GAAD,OAAcA,EAASM,UAC5BP,MAAK,SAACQ,GACLI,EAAUJ,MAEdT,MAAM,8CAAD,OAA+CU,EAAOvF,GAAtD,cACF8E,MAAK,SAACC,GAAD,OAAcA,EAASM,UAC5BP,MAAK,SAACQ,GACLQ,EAAYR,GACZS,QAAQC,IAAIV,GACZM,GAAa,QAEhB,IAGD,8BACGD,EACC,cAACrC,EAAD,IAEA,qCACE,4DAA+BmC,EAAOzF,MACtC,8BAAMyF,EAAOvF,OACb,0CACA,8BACG2F,EAASrF,KAAI,SAACyF,GACb,OACE,gCACE,6BAAKA,EAAIC,QACT,4BAAID,EAAI/F,SAFA+F,EAAIjG,eH3BckE,OAAM,IIJ5CiC,EAAe,WACnB,MAA8BhH,qBAAWH,GAAjCI,EAAR,EAAQA,OACR,OADA,EAAgBuG,UAEP,cAACrC,EAAD,IAGP,qCACGlE,EACC,eAAC,IAAD,WACG+E,EAAc3D,KAAI,SAACC,GAClB,OACE,cAAC,IAAD,CACEqD,KAAMrD,EAAGqD,KACTC,UAAWtD,EAAGsD,UACdG,MAAOzD,EAAGyD,OACLzD,EAAGqD,SAId,cAAC,IAAD,CAAUpE,GAAG,cAGf,eAAC,IAAD,WACGmE,EAAarD,KAAI,SAACC,GACjB,OACE,cAAC,IAAD,CACEqD,KAAMrD,EAAGqD,KACTC,UAAWtD,EAAGsD,UACdG,MAAOzD,EAAGyD,OACLzD,EAAGqD,SAId,cAAC,IAAD,CAAUpE,GAAG,cAGjB,cAAC,IAAD,CAAOoE,KAAK,SAASC,UAAWpE,QCnCtC,SAASyG,IACP,MAA4BvF,oBAAS,GAArC,mBAAOzB,EAAP,KAAeC,EAAf,KACA,EAAkCwB,oBAAS,GAA3C,mBAAO8E,EAAP,KAAkBC,EAAlB,KAOD,OANAjB,qBAAU,WACLnF,aAAa6G,QAAQ,SACtBhH,GAAU,GAEZuG,GAAa,KACZ,IACI,cAAC5G,EAAYsH,SAAb,CAAsBtF,MAAO,CAClC5B,SACAC,YACAsG,aAHK,SAKL,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,SCnBLY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b2e27590.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const AuthContext = createContext(null)","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context\";\r\nconst Navbar = () => {\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n\r\n  const logout = () => {\r\n    setIsAuth(false);\r\n    localStorage.removeItem(\"auth\");\r\n  };\r\n  return (\r\n    <nav className=\"nav-extended teal\">\r\n      <div className=\"nav-content\">\r\n        <ul className=\"tabs tabs-transparent\">\r\n          {isAuth && (\r\n            <li className=\"tab\" onClick={logout}>\r\n              Log Out\r\n            </li>\r\n          )}\r\n          <li className=\"tab\">\r\n            <Link to=\"/posts\">Posts Page</Link>\r\n          </li>\r\n          <li className=\"tab\">\r\n            <Link to=\"/about\">About Page</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport { Navbar };\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n  return <h1>There is no page you search</h1>;\r\n};\r\n\r\nexport { NotFoundPage };\r\n","import { useHistory } from \"react-router-dom\";\r\n\r\nfunction Post(props) {\r\n  const router = useHistory();\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post_content\">\r\n        <strong>\r\n          <span>{props.id}. </span>\r\n          {props.title}\r\n        </strong>\r\n        <p>{props.body}</p>\r\n      </div>\r\n      <div className=\"post_action\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => router.push(`/posts/${props.id}`)}\r\n        >\r\n          Open\r\n        </button>\r\n        <button className=\"btn\" onClick={() => props.delPost(props)}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Post };\r\n","import React from \"react\";\r\nimport { Post } from \"./Post.jsx\";\r\n\r\nfunction PostList({ array, delPost }) {\r\n  if (!array.length) {\r\n    return <h3>Didnt found any posts</h3>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Post List</h1>\r\n      {array.map((el, index) => {\r\n        return <Post key={el.id} {...el} delPost={delPost} />;\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport { PostList };\r\n","import React, { useState } from \"react\";\r\n\r\nfunction PostForm({ create }) {\r\n  const [post, setPost] = useState({ title: \"\", body: \"\" });\r\n\r\n  const addNewPost = (e) => {\r\n    e.preventDefault();\r\n    const newPost = {\r\n      ...post,\r\n      id: Date.now(),\r\n    };\r\n    create(newPost);\r\n    setPost({ title: \"\", body: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        value={post.title}\r\n        placeholder=\"title\"\r\n        onChange={(e) => setPost({ ...post, title: e.target.value })}\r\n      />\r\n      <input\r\n        value={post.body}\r\n        placeholder=\"description\"\r\n        onChange={(e) => setPost({ ...post, body: e.target.value })}\r\n      />\r\n      <button onClick={addNewPost}>Create</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { PostForm };\r\n","import React from \"react\";\r\n\r\nfunction SelectFilter({ defaultValue, options, value, onChange }) {\r\n  return (\r\n    <select\r\n      name=\"filter\"\r\n      size=\"4\"\r\n      className=\"input-field col s12\"\r\n      value={value}\r\n      onChange={(event) => onChange(event.target.value)}\r\n    >\r\n      <option disabled value=\"disabled\">\r\n        {defaultValue}\r\n      </option>\r\n      {options.map((option, index) => (\r\n        <option key={index} value={option.value}>\r\n          {option.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport { SelectFilter };\r\n","import React from \"react\";\r\n\r\nimport { SelectFilter } from \"./SelectFilter.jsx\";\r\n\r\nfunction PostFilter({ filter, setFilter }) {\r\n  return (\r\n    <>\r\n      <input\r\n        placeholder=\"search\"\r\n        value={filter.query}\r\n        onChange={(e) => setFilter({ ...filter, query: e.target.value })}\r\n      />\r\n      <SelectFilter\r\n        value={filter.sort}\r\n        onChange={(selectedSort) =>\r\n          setFilter({ ...filter, sort: selectedSort })\r\n        }\r\n        defaultValue=\"filter\"\r\n        options={[\r\n          { value: \"title\", name: \"By name\" },\r\n          { value: \"info\", name: \"By info\" },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { PostFilter };\r\n","import React from \"react\";\r\n\r\nfunction ModalWin({ children, isActive, setActive }) {\r\n  let classes = \"modalWin\";\r\n  if (isActive) {\r\n    classes += \" modalActive\";\r\n  }\r\n\r\n  return (\r\n    <div className={classes} onClick={(event) => setActive(false)}>\r\n      <div className=\"modalContent\" onClick={(e) => e.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ModalWin };\r\n","import { useMemo } from \"react\";\r\n\r\nexport const useSortedPosts = (array, sort) => {\r\n  const sortedArray = useMemo(() => {\r\n    if (sort) {\r\n      return [...array].sort((a, b) => a[sort].localeCompare(b[sort]));\r\n    }\r\n    return array;\r\n  }, [sort, array]);\r\n\r\n  return sortedArray;\r\n};\r\n\r\nexport const usePosts = (query, array, sort) => {\r\n  const sortedArray = useSortedPosts(array, sort);\r\n  const resultSortedSearch = useMemo(() => {\r\n    return sortedArray.filter((post) =>\r\n      post.title.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  }, [sortedArray, query]);\r\n\r\n  return resultSortedSearch;\r\n};\r\n","import React from \"react\";\r\n\r\nfunction Preloader() {\r\n  return (\r\n    <div className=\"progress\">\r\n      <div className=\"indeterminate\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Preloader };\r\n","import React from \"react\";\r\n\r\nconst PageButtons = ({ totalPages, setPage }) => {\r\n  const pageArray = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageArray.push(i);\r\n  }\r\n\r\n  const updatePages = (currentPage) => {\r\n    setPage(currentPage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagesWrapper\">\r\n      {pageArray.map((p) => {\r\n        return (\r\n          <button\r\n            className=\"btn\"\r\n            key={p}\r\n            onClick={() => {\r\n              updatePages(p);\r\n            }}\r\n          >\r\n            {p}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { PageButtons };\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => {\r\n  return <h1>This is the place there I can practice my React skills.</h1>;\r\n};\r\n\r\nexport { AboutPage };\r\n","import {PostsPage} from './pages/PostsPage.jsx'\r\nimport {AboutPage} from './pages/AboutPage.jsx'\r\nimport {PostPage} from './pages/PostPage.jsx'\r\nimport {LoginPage} from './pages/LoginPage.jsx'\r\nexport const publicRoutes = [\r\n  {path: '/login', component: LoginPage, exact:true}\r\n]\r\n\r\nexport const privateRoutes = [\r\n  {path: '/posts', component: PostsPage, exact:true},\r\n  {path: '/about', component: AboutPage, exact:true},\r\n  {path: '/posts/:id', component: PostPage, exact:true},\r\n]","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../context\";\r\n\r\nconst LoginPage = () => {\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n\r\n  const login = (event) => {\r\n    event.preventDefault();\r\n    setIsAuth(true);\r\n    localStorage.setItem(\"auth\", \"true\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login Page</h2>\r\n      <form onClick={login}>\r\n        <input type=\"text\" placeholder=\"login\" />\r\n        <input type=\"password\" placeholder=\"password\" />\r\n        <button className=\"btn\">log in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { LoginPage };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PostList } from \"../components/PostList.jsx\";\r\nimport { PostForm } from \"../components/PostForm.jsx\";\r\nimport { PostFilter } from \"../components/PostFilter.jsx\";\r\nimport { ModalWin } from \"../components/ModalWin.jsx\";\r\nimport { usePosts } from \"../hooks/usePosts.jsx\";\r\nimport { Preloader } from \"../components/Preloader.jsx\";\r\nimport { PageButtons } from \"../components/PageButtons.jsx\";\r\n\r\nfunction PostsPage() {\r\n  const [array, setArray] = useState([]);\r\n  const [filter, setFilter] = useState({\r\n    sort: \"\",\r\n    query: \"\",\r\n  });\r\n  const [isActive, setActive] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const resultSortedSearch = usePosts(filter.query, array, filter.sort);\r\n  const createPost = (newPost) => {\r\n    setArray([...array, newPost]);\r\n    setActive(false);\r\n  };\r\n  const deletePost = (post) => {\r\n    setArray(array.filter((el) => el.id !== post.id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n    fetchPosts(limit, page);\r\n  }, [page]);\r\n\r\n  const fetchPosts = (limit, page) => {\r\n    fetch(\r\n      `https://jsonplaceholder.typicode.com/posts?_limit=${limit}&_page=${page}`\r\n    )\r\n      .then((response) => {\r\n        const totalCount = response.headers.get(\"x-total-count\");\r\n        setTotalPages(Math.ceil(totalCount / limit));\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setArray(data);\r\n        setIsLoad(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ModalWin isActive={isActive} setActive={setActive}>\r\n        <PostForm create={createPost} />\r\n      </ModalWin>\r\n      <PostFilter filter={filter} setFilter={setFilter} />\r\n      <button className=\"btn\" onClick={() => setActive(true)}>\r\n        Create Post\r\n      </button>\r\n      {isLoad ? (\r\n        <Preloader />\r\n      ) : (\r\n        <PostList array={resultSortedSearch} delPost={deletePost} />\r\n      )}\r\n      <PageButtons setPage={setPage} totalPages={totalPages} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { PostsPage };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Preloader } from \"../components/Preloader.jsx\";\r\n\r\nconst PostPage = () => {\r\n  const params = useParams();\r\n  const [result, setResult] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${params.id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setResult(data);\r\n      });\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${params.id}/comments`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setComments(data);\r\n        console.log(data);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <Preloader />\r\n      ) : (\r\n        <>\r\n          <h1>This is Post page with id {result.id}</h1>\r\n          <div>{result.body}</div>\r\n          <h3>Comments</h3>\r\n          <div>\r\n            {comments.map((com) => {\r\n              return (\r\n                <div key={com.id}>\r\n                  <h5>{com.email}</h5>\r\n                  <p>{com.body}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport { PostPage };\r\n","import { useContext } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context\";\r\nimport { NotFoundPage } from \"../pages/NotFoundPage.jsx\";\r\nimport { publicRoutes, privateRoutes } from \"../routes\";\r\nimport { Preloader } from \"./Preloader.jsx\";\r\n\r\nconst PagesHandler = () => {\r\n  const { isAuth, isLoading } = useContext(AuthContext);\r\n  if (isLoading) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <>\r\n      {isAuth ? (\r\n        <Switch>\r\n          {privateRoutes.map((el) => {\r\n            return (\r\n              <Route\r\n                path={el.path}\r\n                component={el.component}\r\n                exact={el.exact}\r\n                key={el.path}\r\n              />\r\n            );\r\n          })}\r\n          <Redirect to=\"/posts\" />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          {publicRoutes.map((el) => {\r\n            return (\r\n              <Route\r\n                path={el.path}\r\n                component={el.component}\r\n                exact={el.exact}\r\n                key={el.path}\r\n              />\r\n            );\r\n          })}\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n      )}\r\n      <Route path=\"/error\" component={NotFoundPage} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { PagesHandler };\r\n","import {useState, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom'\n\nimport {Navbar} from './components/NavBar.jsx'\nimport {PagesHandler} from './components/PagesHandler.jsx'\nimport {AuthContext} from './context'\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n useEffect(() => {\n   if(localStorage.getItem('auth')) {\n     setIsAuth(true)\n   }\n   setIsLoading(false)\n }, [])\n return <AuthContext.Provider value={{\n   isAuth,\n   setIsAuth,\n   isLoading\n }}>\n   <BrowserRouter>\n     <Navbar />\n     <PagesHandler />\n   </BrowserRouter>\n  </AuthContext.Provider>\n}\n\nexport {App}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}